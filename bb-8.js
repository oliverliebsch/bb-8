// Generated by CoffeeScript 1.10.0
(function() {
  var BB8, Controls, Heading, SingleImage, Subheading, blockMixin, eventBus, vm;

  eventBus = new Vue();

  Controls = {
    template: '#template-controls',
    props: ['index'],
    methods: {
      addBlock: function(type) {
        return eventBus.$emit('bb8-add-block', {
          blocktype: type,
          index: this.index
        });
      }
    }
  };

  blockMixin = {
    data: function() {
      return {
        block: this.initialData
      };
    },
    props: ['initialData', 'index'],
    components: {
      'controls': Controls
    },
    created: function() {
      return _.defaults(this.initialData, {
        fields: this.fields
      });
    },
    methods: {
      updateText: function(text) {
        return this.block.fields[0].content = text;
      }
    }
  };

  Heading = {
    template: '#template-heading',
    data: function() {
      return {
        fields: [
          {
            type: 'text',
            content: '',
            required: true
          }
        ]
      };
    },
    mixins: [blockMixin],
    created: function() {
      return eventBus.$on('bb8-validate-block-heading', this.test);
    },
    methods: {
      test: function() {
        return console.log("validate");
      }
    }
  };

  Subheading = {
    template: '#template-subheading',
    data: function() {
      return {
        fields: [
          {
            text: '',
            required: true
          }
        ]
      };
    },
    mixins: [blockMixin]
  };

  SingleImage = {
    template: '#template-single-image',
    data: function() {
      return {
        fields: [
          {
            type: 'text',
            content: '',
            required: true
          }, {
            type: 'image',
            content: '',
            required: true
          }
        ]
      };
    },
    mixins: [blockMixin],
    methods: {
      updateImage: function(event) {
        var file, reader, that;
        file = event.target.files[0];
        that = this;
        reader = new FileReader();
        reader.onloadend = function(e) {
          if (e.target.readyState === FileReader.DONE) {
            return that.block.fields[1].content = e.target.result;
          }
        };
        return reader.readAsDataURL(file);
      }
    }
  };

  BB8 = {
    template: '#template-bb8',
    data: function() {
      return {
        blocks: [],
        ids: [],
        output: ''
      };
    },
    props: ['initialJson'],
    components: {
      'controls': Controls,
      'heading': Heading,
      'subheading': Subheading,
      'single-image': SingleImage
    },
    computed: {
      ids: function() {
        return _.map(this.blocks, 'id').sort();
      }
    },
    created: function() {
      this.blocks = JSON.parse(this.initialJson);
      this.compileBlocks();
      eventBus.$on('bb8-add-block', this.addBlock);
      return eventBus.$on('bb8-form-submitted', this.compileBlocks);
    },
    methods: {
      addBlock: function(newBlock) {
        return this.blocks.splice(newBlock.index + 1, 0, {
          blocktype: newBlock.blocktype,
          id: this.ids.length ? _.last(this.ids) + 1 : 1
        });
      },
      compileBlocks: function() {
        var block, field, i, j, len, len1, ref, ref1;
        ref = this.blocks;
        for (i = 0, len = ref.length; i < len; i++) {
          block = ref[i];
          ref1 = block.fields;
          for (j = 0, len1 = ref1.length; j < len1; j++) {
            field = ref1[j];
            if (field.required && field.content === '') {
              console.log("error");
              eventBus.$emit('bb8-validate-block-' + block.blocktype);
            }
          }
        }
        return this.output = JSON.stringify(this.blocks);
      }
    }
  };

  vm = new Vue({
    el: '#bb8-form',
    components: {
      'bb8': BB8
    },
    methods: {
      submit: function(event) {
        event.preventDefault();
        return eventBus.$emit('bb8-form-submitted');
      }
    }
  });

}).call(this);
